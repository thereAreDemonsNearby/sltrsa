#include "../biguint.hpp"
#include <fmt/format.h>

template<size_t Bits>
bool preTest(const BigUInt<Bits>& n)
{
    for (int i = 0; i < 10000; ++i) {
	auto copy = n;
	if (copy.divideU32(smallPrimes[i]) == 0) {
	    return false;
	}
    }

    return true;
}

template<size_t Bits>
bool isComposite_serial(const BigUInt<Bits>& n)
{
    if (!preTest(n))
	return true;

    return millerRabin(n);
}

template<size_t Bits>
BigUInt<Bits> primeGen_serial(BigUInt<Bits> beginning)
{
    while (isComposite_serial(beginning)) {
	beginning += 2;
    }
    return beginning;
}

int main()
{
    
}
